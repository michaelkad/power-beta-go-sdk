name: Manual Trigger Workflow
on:
  workflow_dispatch:
    inputs:
      triggerString:
        description: 'Enter a string to trigger the workflow'
        required: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      
      - name: Checkout power-beta-go-sdk
        uses: actions/checkout@v3
        with:
          path: go/src/github.com/main

      - name: Checkout power-go-client repo
        uses: actions/checkout@v3
        with:
          repository: michaelkad/terraform-provider-ibm
          path: go/src/github.com/terraform-provider-ibm
          ref: ${{ github.event.inputs.triggerString }}
      
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18
      - run: |
          go version
          echo "==> Creating GOPATH/ directory..."
          export GOPATH="$HOME/go"
          export PATH=$PATH:$GOPATH/bin
          mkdir -p $GOPATH $GOPATH/src $GOPATH/pkg $GOPATH/bin
      
      - name: Run Script
        run: |
          sudo apt install gox
          echo "Home: $HOME, Path: $PATH"
          echo "gopath: $GOPATH or  bin: $GOPATH/bin"
          echo "Trigger String: ${{ github.event.inputs.triggerString }}"
          cd  $GOPATH
          ls -la
          cd "/home/runner/work/power-beta-go-sdk/power-beta-go-sdk/go/src/github.com/main"
          chmod +x .github/workflows/build.sh
          .github/workflows/build.sh "${{ github.event.inputs.triggerString }}"
          parent_dir="/home/runner/work/power-beta-go-sdk/power-beta-go-sdk/go/src/github.com/terraform-provider-ibm"
          
          ASSET_linux_amd64=""
          ASSET_windows_amd64=""
          ASSET_linux_arm=""
          ASSET_darwin_amd64=""
          
          while IFS= read -r -d $'\0' file; do
            relative_path="${file#$parent_dir/}"
            case "$relative_path" in
                  linux_amd64.zip)
                      echo "==>  linux_amd64.zip directory...$file""
                      ASSET_linux_amd64="$file"
                      ;;
                  windows_amd64.zip)
                      echo "==>  windows_amd64.zip directory...$file""
                      ASSET_windows_amd64="$file"
                      ;;
                  linux_arm.zip)
                      echo "==>   linux_arm.zip directory...$file""
                      ASSET_linux_arm="$file"
                      ;;
                  darwin_amd64.zip)
                      ASSET_darwin_amd64="$file"
                      ;;
              esac
          done < <(find "$parent_dir/pkg" -type f \( -name "linux_amd64.zip" -o -name "windows_amd64.zip" -o -name "linux_arm.zip" -o -name "darwin_amd64.zip" \) -print0)
          echo "Parent directory: $parent_dir"
          echo "ASSET_linux_amd64=$(printf "%q" "$ASSET_linux_amd64")" >> $GITHUB_ENV
          echo "ASSET_windows_amd64=$(printf "%q" "$ASSET_windows_amd64")" >> $GITHUB_ENV
          echo "ASSET_linux_arm=$(printf "%q" "$ASSET_linux_arm")" >> $GITHUB_ENV
          echo "ASSET_darwin_amd64=$(printf "%q" "$ASSET_darwin_amd64")" >> $GITHUB_ENV
          echo "Individual asset variables added to the GitHub environment:"
          echo "ASSET_linux_amd64=$ASSET_linux_amd64"
          echo "ASSET_windows_amd64=$ASSET_windows_amd64"
          echo "ASSET_linux_arm=$ASSET_linux_arm"
          echo "ASSET_darwin_amd64=$ASSET_darwin_amd64"
        env:
         GOPATH: /home/runner/go
      - name: Create release 
        uses: softprops/action-gh-release@v1
        with:
          body: "Testing zip files"
          prerelease: true
          tag_name: v0.0.55-2
          files: |
            ${{ env.ASSET_linux_amd64 }}
            ${{ env.ASSET_linux_arm }}
            ${{ env.ASSET_darwin_amd64 }}
            ${{ env.ASSET_windows_amd64 }}
        

